<?xml version="1.0" encoding="UTF-8"?>
<!-- (c) UML.FRI -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://umlfri.kst.fri.uniza.sk/xmlschema/metamodel.xsd" targetNamespace="http://umlfri.kst.fri.uniza.sk/xmlschema/metamodel.xsd" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:element name="ElementType">
		<xs:annotation>
			<xs:documentation>Element object in UML .FRI metamodel</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Icon">
					<xs:annotation>
						<xs:documentation>Define icon of element</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:attribute name="path" type="xs:string"/>
					</xs:complexType>
				</xs:element>
				<xs:element name="Domain">
					<xs:annotation>
						<xs:documentation>Define domain of element</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:attribute name="id" type="xs:string"/>
						<xs:attribute name="identity" type="xs:string"/>
					</xs:complexType>
				</xs:element>
				<xs:element name="Connections">
					<xs:annotation>
						<xs:documentation>Define connections of element</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Item" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Each of items define one connection</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:attribute name="value" type="xs:string"/>
									<xs:attribute name="allowrecursive" type="xs:string"/>
									<xs:attribute name="with" type="xs:string"/>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<!--<xs:element name="Attributes" type="AttributesType" minOccurs="0"/>-->
				<xs:element name="Appearance" type="SimpleObjectContainer">
					<xs:annotation>
						<xs:documentation>This block define appearance of element as line, icon, align, padding, ...</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="Options" type="OptionType" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Define options of element. Is not required</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
			<xs:attribute name="id" type="xs:string" use="required">
				<xs:annotation>
					<xs:documentation>Element ID is required</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="SimpleObjectContainer">
		<xs:annotation>
			<xs:documentation>Simple container for Visual Objects</xs:documentation>
		</xs:annotation>
		<xs:group ref="ObjectContainerContent" minOccurs="0"/>
	</xs:complexType>
	<xs:complexType name="ObjectContainer">
		<xs:annotation>
			<xs:documentation>Complex container for Visual Objects</xs:documentation>
		</xs:annotation>
		<xs:group ref="ObjectContainerContent" minOccurs="0" maxOccurs="unbounded"/>
	</xs:complexType>
	<xs:group name="ObjectContainerContent">
		<xs:choice>
			<xs:element name="Align" type="AlignType">
				<xs:annotation>
					<xs:documentation>Define align of element</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Condition" type="ConditionType">
				<xs:annotation>
					<xs:documentation>Define condition of element</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ellipse" type="EllipseType">
				<xs:annotation>
					<xs:documentation>Define ellipse of element</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HBox" type="HBoxType">
				<xs:annotation>
					<xs:documentation>Define horizontal box of element</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Icon" type="IconType">
				<xs:annotation>
					<xs:documentation>Define icon of element</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line" type="LineType">
				<xs:annotation>
					<xs:documentation>Define line of element</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Loop" type="LoopType">
				<xs:annotation>
					<xs:documentation>Define loop of element</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Padding" type="PaddingType">
				<xs:annotation>
					<xs:documentation>Define padding of element</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Proportional" type="ProportionalType">
				<xs:annotation>
					<xs:documentation>Define proportional of element</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rectangle" type="RectangleType">
				<xs:annotation>
					<xs:documentation>Define rectangle of element</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shadow" type="ShadowType">
				<xs:annotation>
					<xs:documentation>Define shadow of element</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Sizer" type="SizerType">
				<xs:annotation>
					<xs:documentation>Define sizer of element</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Svg" type="SvgType">
				<xs:annotation>
					<xs:documentation>Define svg of element</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox" type="TextBoxType">
				<xs:annotation>
					<xs:documentation>Define box of text of element</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VBox" type="VBoxType">
				<xs:annotation>
					<xs:documentation>Define vertical box of element</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Switch" type="SwitchType">
				<xs:annotation>
					<xs:documentation>Define switch of element</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Diamond" type="DiamondType">
				<xs:annotation>
					<xs:documentation>Define diamond of element</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
	</xs:group>
	<xs:complexType name="AlignType">
		<xs:annotation>
			<xs:documentation>type of Align</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="SimpleObjectContainer">
				<xs:attribute name="align" type="xs:string" use="required"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ConditionType">
		<xs:annotation>
			<xs:documentation>type of Condition</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="SimpleObjectContainer">
				<xs:attribute name="condition" type="xs:string" use="required"/>
				<xs:attribute name="type" type="xs:string" use="optional" default="equal"/>
				<xs:attribute name="negate" type="xs:string" default="0"/>
				<xs:attribute name="value" type="xs:string" use="optional"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="EllipseType">
		<xs:annotation>
			<xs:documentation>type of Ellipse</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="SimpleObjectContainer">
				<xs:attribute name="fill" type="xs:string"/>
				<xs:attribute name="border" type="xs:string" default="white"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DiamondType">
		<xs:annotation>
			<xs:documentation>type of Diamond</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="SimpleObjectContainer">
				<xs:attribute name="fill" type="xs:string"/>
				<xs:attribute name="border" type="xs:string" default="white"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="IconType">
		<xs:annotation>
			<xs:documentation>type of Icon</xs:documentation>
		</xs:annotation>
		<xs:attribute name="filename" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation>Define name of icon</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="LineType">
		<xs:annotation>
			<xs:documentation>type of Line</xs:documentation>
		</xs:annotation>
		<xs:attribute name="type" default="auto">
			<xs:annotation>
				<xs:documentation>Define type of line. Not required</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="horizontal"/>
					<xs:enumeration value="vertical"/>
					<xs:enumeration value="auto"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="color" type="xs:string">
			<xs:annotation>
				<xs:documentation>Define color of line. Not required</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="LoopType">
		<xs:annotation>
			<xs:documentation>type of Loop</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="SimpleObjectContainer">
				<xs:attribute name="collection" type="xs:string" use="required"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="PaddingType">
		<xs:annotation>
			<xs:documentation>type of Padding</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="SimpleObjectContainer">
				<xs:attribute name="padding" type="xs:int" use="required">
					<xs:annotation>
						<xs:documentation>Define padding</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ProportionalType">
		<xs:annotation>
			<xs:documentation>type of Proportional</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="SimpleObjectContainer">
				<xs:attribute name="ratio" type="xs:string" use="required"/>
				<xs:attribute name="align" type="xs:string"/>
				<xs:attribute name="size" default="maximal">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:enumeration value="maximal"/>
							<xs:enumeration value="minimal"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="RectangleType">
		<xs:annotation>
			<xs:documentation>type of Rectangle</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="SimpleObjectContainer">
				<xs:attribute name="fill" type="xs:string"/>
				<xs:attribute name="border" type="xs:string" default="white"/>
				<xs:attribute name="lefttop" type="xs:string"/>
				<xs:attribute name="righttop" type="xs:string"/>
				<xs:attribute name="leftbottom" type="xs:string"/>
				<xs:attribute name="rightbottom" type="xs:string"/>
				<xs:attribute name="left" type="xs:string"/>
				<xs:attribute name="right" type="xs:string"/>
				<xs:attribute name="top" type="xs:string"/>
				<xs:attribute name="bottom" type="xs:string"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ShadowType">
		<xs:annotation>
			<xs:documentation>type of Shadow</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="SimpleObjectContainer">
				<xs:attribute name="padding" type="xs:string" use="required"/>
				<xs:attribute name="color" use="required">
					<xs:simpleType>
						<xs:restriction base="xs:string"/>
					</xs:simpleType>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SizerType">
		<xs:annotation>
			<xs:documentation>type of Sizer</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="SimpleObjectContainer">
				<xs:attribute name="minwidth" type="xs:int"/>
				<xs:attribute name="minheight" type="xs:int"/>
				<xs:attribute name="maxwidth" type="xs:int"/>
				<xs:attribute name="maxheight" type="xs:int"/>
				<xs:attribute name="width" type="xs:int"/>
				<xs:attribute name="height" type="xs:int"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SvgType">
		<xs:annotation>
			<xs:documentation>type of Svg</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="SvgContainerType">
				<xs:attribute name="width" type="xs:int" use="required"/>
				<xs:attribute name="height" type="xs:int" use="required"/>
				<xs:attribute name="scale">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:pattern value="0\.[0-9]+"/>
							<xs:pattern value="[0-9]{1,3}%"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SwitchType">
		<xs:annotation>
			<xs:documentation>type of Switch</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Case" maxOccurs="unbounded">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="SimpleObjectContainer">
							<xs:attribute name="type" default="equal">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:enumeration value="equal"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:attribute>
							<xs:attribute name="negate" type="xs:boolean" default="false"/>
							<xs:attribute name="condition" type="xs:string"/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="value" type="xs:string"/>
	</xs:complexType>
	<xs:complexType name="TextBoxType">
		<xs:annotation>
			<xs:documentation>type of TextBox</xs:documentation>
		</xs:annotation>
		<xs:attribute name="text" type="xs:string" use="required"/>
		<xs:attribute name="linestart" type="xs:string"/>
		<xs:attribute name="color" type="xs:string" default="black"/>
		<xs:attribute name="font" type="xs:string" default="Arial 10"/>
	</xs:complexType>
	<xs:complexType name="VBoxType">
		<xs:annotation>
			<xs:documentation>type of vertical box</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ObjectContainer">
				<xs:attribute name="expand" type="xs:string"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="HBoxType">
		<xs:annotation>
			<xs:documentation>type of horizontal box</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ObjectContainer">
				<xs:attribute name="expand" type="xs:string"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="Metamodel">
		<xs:annotation>
			<xs:documentation>Version of UML.FRI</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Diagrams">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Item" minOccurs="0" maxOccurs="unbounded">
								<xs:complexType>
									<xs:attribute name="value" type="xs:string"/>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="ConnectionType">
		<xs:annotation>
			<xs:documentation>Description of diagram connection</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:choice maxOccurs="unbounded">
				<xs:element name="Icon" type="ElementIconType"/>
				<xs:element name="Domain">
					<xs:complexType>
						<xs:attribute name="id" type="xs:string"/>
						<xs:attribute name="identity" type="xs:string"/>
					</xs:complexType>
				</xs:element>
				<xs:element name="SrcArrow" type="ArrowType"/>
				<xs:element name="DestArrow" type="ArrowType"/>
				<xs:element name="Appearance">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="LineStyle">
								<xs:complexType>
									<xs:attribute name="style" use="required">
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:enumeration value="solid"/>
												<xs:enumeration value="dot"/>
												<xs:enumeration value="doubledot"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:attribute>
									<xs:attribute name="color" type="xs:string" use="required"/>
								</xs:complexType>
							</xs:element>
							<xs:element name="ArrowStyle">
								<xs:complexType>
									<xs:attribute name="style" use="required">
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:enumeration value="simple"/>
												<xs:enumeration value="triangle"/>
												<xs:enumeration value="ftriagle"/>
												<xs:enumeration value="diamond"/>
												<xs:enumeration value="fdiamond"/>
												<xs:enumeration value="crosscircle"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:attribute>
									<xs:attribute name="fill" type="xs:string" use="required"/>
									<xs:attribute name="color" type="xs:string" use="required"/>
								</xs:complexType>
							</xs:element>
							<xs:element name="Label" minOccurs="0" maxOccurs="unbounded">
								<xs:complexType>
									<xs:complexContent>
										<xs:extension base="SimpleObjectContainer">
											<xs:attribute name="position" use="required">
												<xs:simpleType>
													<xs:restriction base="xs:string">
														<xs:pattern value="(source|destination|center)([+\-][0-9]+)?"/>
													</xs:restriction>
												</xs:simpleType>
											</xs:attribute>
										</xs:extension>
									</xs:complexContent>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:choice>
			<xs:attribute name="id" use="required"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="DiagramType">
		<xs:annotation>
			<xs:documentation>Diagram object in UML.FRI</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Icon" type="ElementIconType"/>
				<xs:element name="Special" type="ElementSpecialType"/>
				<xs:element name="Elements">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Item" type="ElementItemType" minOccurs="0" maxOccurs="unbounded"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="Connections">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Item" type="ElementItemType" minOccurs="0" maxOccurs="unbounded"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name="id" type="xs:string" use="required"/>
			<xs:attribute name="umlversion" type="xs:string"/>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="AttributesType">
		<xs:annotation>
			<xs:documentation>type of Attributes</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Item" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Each item define one attribute</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Option" minOccurs="0" maxOccurs="unbounded">
							<xs:complexType>
								<xs:attribute name="value" type="xs:string"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="notgenerate" type="xs:boolean"/>
					<xs:attribute name="value" type="xs:string"/>
					<xs:attribute name="type">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="str"/>
								<xs:enumeration value="int"/>
								<xs:enumeration value="enum"/>
								<xs:enumeration value="bool"/>
								<xs:enumeration value="note"/>
								<xs:enumeration value="attrs"/>
								<xs:enumeration value="opers"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="propid" type="xs:string"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ArrowType">
		<xs:annotation>
			<xs:documentation>type of Arrow</xs:documentation>
		</xs:annotation>
		<xs:attribute name="possible" type="xs:boolean" use="required">
			<xs:annotation>
				<xs:documentation>define possibilty of arrow</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="default" type="xs:boolean" use="required">
			<xs:annotation>
				<xs:documentation>define default value of arrow</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="ElementIconType">
		<xs:annotation>
			<xs:documentation>type of Icon of Element</xs:documentation>
		</xs:annotation>
		<xs:attribute name="path" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation>define path of icon of element</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="ElementSpecialType">
		<xs:annotation>
			<xs:documentation>type of Element Special</xs:documentation>
		</xs:annotation>
		<xs:attribute name="swimlines" type="xs:boolean" use="required">
			<xs:annotation>
				<xs:documentation>define, swimlines are enabled or disabled</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="lifelines" type="xs:boolean" use="required">
			<xs:annotation>
				<xs:documentation>define, lifelines are enabled or disabled</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="ElementItemType">
		<xs:annotation>
			<xs:documentation>type of Item of Element</xs:documentation>
		</xs:annotation>
		<xs:attribute name="value" type="xs:string" use="required"/>
	</xs:complexType>
	<xs:complexType name="SvgContainerType">
		<xs:annotation>
			<xs:documentation>type of Container of Svg</xs:documentation>
		</xs:annotation>
		<xs:group ref="SvgContent" maxOccurs="unbounded"/>
	</xs:complexType>
	<xs:group name="SvgContent">
		<xs:choice>
			<xs:element name="path">
				<xs:complexType>
					<xs:attribute name="id" type="xs:string"/>
					<xs:attribute name="d" type="xs:string"/>
					<xs:attribute name="style" type="xs:string"/>
					<xs:attribute name="transform" type="xs:string"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="g">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="SvgContainerType">
							<xs:attribute name="id" type="xs:string" use="optional"/>
							<xs:attribute name="style" type="xs:string"/>
							<xs:attribute name="transform" type="xs:string"/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:choice>
	</xs:group>
	<xs:complexType name="OptionType">
		<xs:annotation>
			<xs:documentation>type of Option</xs:documentation>
		</xs:annotation>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="DirectAdd" type="xs:boolean" default="false">
				<xs:annotation>
					<xs:documentation>this block define, that element can be direct add into empty project</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<xs:element name="Domain">
		<xs:annotation>
			<xs:documentation>Description of diagram domain</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element name="Parse" type="ParseType" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element name="Join" type="JoinType" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element name="Attribute" minOccurs="0" maxOccurs="unbounded">
					<xs:complexType>
						<xs:choice minOccurs="0" maxOccurs="unbounded">
							<xs:element name="List" minOccurs="0">
								<xs:complexType>
									<xs:sequence minOccurs="0">
										<xs:element name="Parse" type="ParseType" minOccurs="0"/>
									</xs:sequence>
									<xs:attribute name="type" type="xs:string" use="optional"/>
								</xs:complexType>
							</xs:element>
							<xs:element name="Enum" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
							<xs:element ref="Domain" minOccurs="0"/>
						</xs:choice>
						<xs:attribute name="id" type="xs:string" use="required"/>
						<xs:attribute name="type" type="xs:string" use="optional"/>
						<xs:attribute name="name" type="xs:string" use="required"/>
						<xs:attribute name="default" type="xs:string" use="optional"/>
					</xs:complexType>
				</xs:element>
				<xs:element name="Import" minOccurs="0" maxOccurs="unbounded">
					<xs:complexType>
						<xs:attribute name="id" type="xs:string"/>
					</xs:complexType>
				</xs:element>
			</xs:choice>
			<xs:attribute name="id" type="xs:string" use="optional"/>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="ParseType">
		<xs:annotation>
			<xs:documentation>type of Parse</xs:documentation>
		</xs:annotation>
		<xs:attribute name="separator" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>Define separator of parser</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="regexp" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>Define regular expration for parser</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="JoinType">
		<xs:annotation>
			<xs:documentation>type of Join</xs:documentation>
		</xs:annotation>
		<xs:attribute name="joiner" type="xs:string">
			<xs:annotation>
				<xs:documentation>Define join string</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
</xs:schema>
